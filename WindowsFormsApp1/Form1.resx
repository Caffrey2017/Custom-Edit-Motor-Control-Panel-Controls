<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="skinCode1.CodeImg" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIIAAAA1CAYAAACNzDMwAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAOFSURBVHhe7ZldtoMgDIS7ORfU1bgWl+JO+uaVWDSJAwba
        60/Nw3fawiRyZAxgH6/Xa3AcN4JDuBEcwo3gEG4Eh3AjOIQbwSHcCA7xU0Z4PB4CpPkqfTs043Watsf9
        F+InjKANoEExn9I9l/xuhIPhk70Fiq+nH9pmyf3skOZaXNYIfJKtoDx1cCM0Q9sjzbW4pBGsE6x1OW0Z
        3fCcc7oRDqF0YrVe0szfUWwaboTn0EGNlTFX0w497NuPSxhhLsPjDYsTZ5k8rrWAcmAqjNA9xbUkn5rp
        cy5TEfguPYJ0Aa3b5NmtcmR5HxspNvU0Zydec/zycqmlYXUDx0lI9mUI+r5dloVA0c7fYgSuSVFqwH/k
        2kZIsBUX22WVKSjP/GlPTiZfPs5/xPw5I1jilj45WcmnW2MygnzXcPaXTmSEOFjdeSbiGDWxf7rpeK1N
        xRCqhFsmjC8rOb2oOMww4TfXnYFxTGywChSwJ2hMGhSn2dKX7hesRhB539Vm/v0Gxe0NjWXVkIDrvse7
        NKtNX/zU3zklpZbHof5AyX6Ba7OmESeHKefyWxL08XMvxBg2BQqkr0U/iTmmmLiml52713kQar+Q2dEv
        Rtg49llODglgvg9B15lBAREYoEBxJsabhPJFUEw0Tm01SOWdMe4XzEbQ5koxmg62M3D+bVAuDel0IAIF
        W6iN1def+LwapHMvyCqFJpqfBrbGIk8OkdxyorUWauJW19UNFlKJLW0InjtFTTUIlF4nkN8vlBhB5cos
        N4hlDAuoPaXlRE3MrakygiZ3Ud42E0sw2yTmqasGgXj91RgyBK14ksUEsnJveO+ATg5IZyHkiJ/8O2/j
        fSV8xQg15M79mm9UA8vNEVq1X1jKeZkR0MkB6g7mMCPMN2irKswT8r/VgGvnGDGJb9Nyg1hKvTCUzfhH
        cJwRRub1M3NDY4kurQaB6eZPoP4A13Biv1jjQwUoNYI6OZz1P4dDjRBIHsVM7/PzzPEjW/0cqcM7/4DN
        nNIINYbeg8ONQIgSLKl9gnSeXF+EawRqvxCxje0afz6dwwj/AJ+wQKo9wmMhwKxWk1LVq6xqe3EbI6RA
        sSm2XzZdl1sbAcXdlVsaAenvzu2MgLTODxsh4AawcwsjoD5H8tNGcOy4ERzCjeAQbgSHcCM4hBvBIdwI
        DuFGcAg3gkO4ERzCjeAQbgSHcCM4hBvBGXkNfwlvuKoNVNv3AAAAAElFTkSuQmCC
</value>
  </data>
</root>